#!/usr/bin/env python2
import numpy as np
import matplotlib.pyplot as plt
import matplotlib as mpl
mpl.use('Agg')

sizes = np.array([1475, 13355, 112873, 926630, 14699345, 1475, 13355, 112873, 926630, 14699345, 1475, 13355, 112873, 926630, 14699345, 1475, 13355, 112873, 926630, 14699345, 1475, 13355, 112873, 926630, 14699345, 4140, 35441, 290554, 2350065, 36961434, 4140, 35441, 290554, 2350065, 36961434, 4140, 35441,
                  290554, 2350065, 36961434, 4140, 35441, 290554, 2350065, 36961434, 4140, 35441, 290554, 2350065, 36961434, 8647, 72456, 587031, 4724025, 74065625, 8647, 72456, 587031, 4724025, 74065625, 8647, 72456, 587031, 4724025, 74065625, 8647, 72456, 587031, 4724025, 74065625, 8647, 72456, 587031, 4724025, 74065625])

runtimes = np.array([(60 * 0) + 5.901, (60 * 0) + 10.843, (60 * 0) + 12.527, (60 * 0) + 10.268, (60 * 2) + 16.740, (60 * 0) + 14.374, (60 * 0) + 14.365, (60 * 1) + 21.428, (60 * 0) + 27.759, (60 * 2) + 18.709, (60 * 0) + 53.942, (60 * 0) + 22.087, (60 * 1) + 58.369, (60 * 14) + 16.521, (60 * 2) + 19.394, (60 * 1) + 57.182, (60 * 0) + 47.371, (60 * 3) + 50.471, (60 * 26) + 26.921, (60 * 2) + 19.213, (60 * 2) + 24.908, (60 * 1) + 23.097, (60 * 6) + 48.099, (60 * 47) + 58.250, (60 * 2) + 18.755, (60 * 0) + 6.785, (60 * 0) + 23.335, (60 * 0) + 26.427, (60 * 0) + 25.662, (60 * 6) + 50.244, (60 * 0) + 35.712, (60 * 0) + 30.025, (60 * 3) + 13.541, (60 * 1) + 9.205, (60 * 6) + 47.364, (60 * 0) + 51.123, (60 * 0) + 43.918, (60 * 4)
                     + 34.371, (60 * 37) + 9.299, (60 * 6) + 49.272, (60 * 0) + 43.968, (60 * 1) + 18.955, (60 * 8) + 41.886, (60 * 70) + 55.959, (60 * 6) + 50.301, (60 * 4) + 18.009, (60 * 2) + 33.138, (60 * 16) + 6.395, (60 * 123) + 56.564, (60 * 6) + 48.120, (60 * 0) + 9.201, (60 * 0) + 44.687, (60 * 0) + 51.625, (60 * 0) + 54.440, (60 * 17) + 59.338, (60 * 0) + 11.127, (60 * 0) + 53.258, (60 * 6) + 33.394, (60 * 2) + 25.641, (60 * 17) + 28.045, (60 * 0) + 15.880, (60 * 1) + 17.411, (60 * 9) + 24.597, (60 * 76) + 0.767, (60 * 18) + 7.023, (60 * 0) + 36.667, (60 * 2) + 28.443, (60 * 17) + 13.388, (60 * 142) + 48.292, (60 * 18) + 44.023, (60 * 1) + 13.112, (60 * 4) + 26.632, (60 * 31) + 56.401, (60 * 264) + 15.462, (60 * 17) + 40.619])

data = [[2, 2e-4, 10], [1, 2e-4, 10], [0.5, 2e-4, 10], [0.25, 2e-4, 10], [0.1, 2e-4, 10], [2, 1e-4, 10], [1, 1e-4, 10], [0.5, 1e-4, 10], [0.25, 1e-4, 10], [0.1, 1e-4, 10], [2, 5e-5, 10], [1, 5e-5, 10], [0.5, 5e-5, 10], [0.25, 5e-5, 10], [0.1, 5e-5, 10], [2, 2e-5, 10], [1, 2e-5, 10], [0.5, 2e-5, 10], [0.25, 2e-5, 10], [0.1, 2e-5, 10], [2, 1e-5, 10], [1, 1e-5, 10], [0.5, 1e-5, 10], [0.25, 1e-5, 10], [0.1, 1e-5, 10], [2, 2e-4, 25], [1, 2e-4, 25], [0.5, 2e-4, 25], [0.25, 2e-4, 25], [0.1, 2e-4, 25], [2, 1e-4, 25], [1, 1e-4, 25], [0.5, 1e-4, 25], [0.25, 1e-4, 25], [0.1, 1e-4, 25], [2, 5e-5, 25], [1, 5e-5, 25], [0.5,
e-5, 25], [0.25, 5e-5, 25], [0.1, 5e-5, 25], [2, 2e-5, 25], [1, 2e-5, 25], [0.5, 2e-5, 25], [0.25, 2e-5, 25], [0.1, 2e-5, 25], [2, 1e-5, 25], [1, 1e-5, 25], [0.5, 1e-5, 25], [0.25, 1e-5, 25], [0.1, 1e-5, 25], [2, 2e-4, 50], [1, 2e-4, 50], [0.5, 2e-4, 50], [0.25, 2e-4, 50], [0.1, 2e-4, 50], [2, 1e-4, 50], [1, 1e-4, 50], [0.5, 1e-4, 50], [0.25, 1e-4, 50], [0.1, 1e-4, 50], [2, 5e-5, 50], [1, 5e-5, 50], [0.5, 5e-5, 50], [0.25, 5e-5, 50], [0.1, 5e-5, 50], [2, 2e-5, 50], [1, 2e-5, 50], [0.5, 2e-5, 50], [0.25, 2e-5, 50], [0.1, 2e-5, 50], [2, 1e-5, 50], [1, 1e-5, 50], [0.5, 1e-5, 50], [0.25, 1e-5, 50], [0.1, 1e-5, 50]]
print(runtimes)

fit = np.poly1d(np.polyfit(sizes, runtimes, 2))
# fit2 = np.poly1d(np.polyfit(sizes, hoptimes4, 2, w=sizes ** 2))
# linfit = np.poly1d(np.polyfit(sizes[:-4], hoptimes4[:-4], 1))
s = np.linspace(sizes[0], sizes[-1], 100)
# s2 = np.linspace(sizes[-4], sizes[-1], 100)

plt.plot(sizes, runtimes, 'b*', label="GTX1080")
# plt.plot(s, fit(s), 'g-', label="Linear fit")
# print fit(1000000000)
# print fit2(1000000000)
# print linfit(1000000000)
# plt.plot(dynamic,bodies,label="Chrono::Parallel")
plt.xlabel("# Particles")
plt.ylabel("Simulation time in s")
plt.legend()
plt.title("Chrono::Granular scaling for 2s dam break")

plt.savefig("scaling_big.png")
plt.show()
