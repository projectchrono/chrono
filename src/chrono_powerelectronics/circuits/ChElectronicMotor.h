// ==================================================================================================================================================
// PROJECT CHRONO - http://projectchrono.org
//
// Copyright (c) 2024 Federico Maria Reato, Matteo Santelia, Filippo Morlacchi, Claudio Ricci, Maurizio Zama, Iseo Serrature S.p.a, projectchrono.org
// All rights reserved.
//
// Use of this source code is governed by a BSD-style license that can be found
// in the LICENSE file at the top level of the distribution and at
// http://projectchrono.org/license-chrono.txt.
//
// ==================================================================================================================================================
// Authors: Federico Maria Reato, Matteo Santelia, Filippo Morlacchi, Claudio Ricci
// ==================================================================================================================================================

#ifndef CHELECTRONICMOTOR_H
#define CHELECTRONICMOTOR_H

#include "ChElectronicCircuit.h"
#include "chrono/physics/ChBody.h"


namespace chrono {
namespace powerelectronics {

class ChElectronicMotor : public ChElectronicCircuit {
public:
    // Constructors
    ChElectronicMotor(std::shared_ptr<ChBody> spindle, double t_step);
    ChElectronicMotor(double t_step);

    // Overriden methods from ChElectronicCircuit
    void PreInitialize() override;
    void PostInitialize() override;
    void PreAdvance(double dt_mbs) override;
    void PostAdvance(double dt_mbs) override;

    // Motor control functions
    void InitParams(double kt_motor, double ke_motor) {
        this->kt_motor = kt_motor;
        this->ke_motor = ke_motor;
    }

    void InitMotorModel(double L_coil, double R_coil) {
        this->L_coil = L_coil;
        this->R_coil = R_coil;
    }

    void SetShaftAngVel(double angvel);  // Set shaft angular velocity
    ChVector3d GetOutputTorque();  // Get the torque generated by the motor
    void SetPWM(double PWM);  // Set the PWM control signal

private:
    std::shared_ptr<ChBody> spindle = nullptr;  // Pointer to the spindle body
    double VbackemfCVAR = 0.0;  // Variable for back EMF
    double VgenPWMVAR = 5.2;  // PWM voltage variable

    // Motor parameters
    double kt_motor = 0.1105;  // Motor torque constant [Nm/A]
    double ke_motor = -0.0953;  // Motor back EMF constant [V/(rad/s)]
    double L_coil = 0.002;  // Coil inductance [H]
    double R_coil = 69.1;  // Coil resistance [Ohm]

    double shaft_angvel = 0.0;  // Angular velocity of the motor shaft
    ChVector3d spindle_torque{};  // Torque vector applied to the spindle
};


}
}
#endif // CHELECTRONICMOTOR_H
