// =============================================================================
// PROJECT CHRONO - http://projectchrono.org
//
// Copyright (c) 2025 projectchrono.org
// All rights reserved.
//
// Use of this source code is governed by a BSD-style license that can be found
// in the LICENSE file at the top level of the distribution and at
// http://projectchrono.org/license-chrono.txt.
//
// =============================================================================
// Authors: Radu Serban
// =============================================================================
//
// Definition of the ChSoaPrismaticBody class.
//
// =============================================================================

#ifndef CH_SOA_PRISMATIC_BODY_H
#define CH_SOA_PRISMATIC_BODY_H

#include "chrono/core/ChApiCE.h"

#include "chrono/soa/ChSoaMobilizedBodyT.h"

namespace chrono {
namespace soa {

/// @addtogroup chrono_soa
/// @{

/// Concrete mobilized body with prismatic joint.
class ChApi ChSoaPrismaticBody : public ChSoaMobilizedBodyT<1> {
  public:
    /// Construct a body mobilized with a prismatic joint.
    /// A ChSoaPrismaticBody is a mobilizer with one translational degree of freedom. A prismatic joint cannot rotate
    /// and only translates about the x-axis. The moving frame M (on the ChSoaPrismaticBody) and the fixed frame F (on
    /// the parent body) are such that their origins are always coincident and their x-axes always aligned. Therefore, a
    /// ChSoaPrismaticBody can only represent a translation along the common x-axis and it can represent only the zero
    /// rotation. The generalized speed is the linear velocity of M in the F frame, about F's x-axis, expressed in F.
    /// (This axis is also constant in M.) For this mobilizer the velocity Jacobian H_FM is constant (and set at
    /// construction) and thus its derivative is zero (also set at construction).
    ChSoaPrismaticBody(std::shared_ptr<ChSoaMobilizedBody> parent,
                       const ChSoaMassProperties& mprops,
                       const ChFramed& inbFrame,
                       const ChFramed& outbFrame,
                       const std::string& name = "");

    ChSoaPrismaticBody(const ChSoaPrismaticBody& other);

    /// "Virtual" copy constructor (covariant return type).
    virtual ChSoaPrismaticBody* Clone() const override { return new ChSoaPrismaticBody(*this); }

    virtual int getNumQ() const override { return 1; }

    // Set the internal coordinates for the ChSoaPrismaticBody so they best approximate the specified
    // (relative) postition, linear velocity, and linear acceleration, respectively.
    // A prismatic joint can only represent a rotation about the x-axis, but no rotation.

    virtual void setRelRot(const ChMatrix33d& relRot) override {}
    virtual void setRelLoc(const ChVector3d& relLoc) override;
    virtual void setRelAngVel(const ChVector3d& relAngVel) override {}
    virtual void setRelLinVel(const ChVector3d& relLinVel) override;
    virtual void setRelAngAcc(const ChVector3d& relAngAcc) override {}
    virtual void setRelLinAcc(const ChVector3d& relLinAcc) override;

    // Mobilizer-specific access to generalized coordinates, velocities, and accelerations.

    void setRelPos(double x);
    void setRelVel(double xd);
    void setRelAcc(double xdd);

    virtual double getQ0(int dof) const override;
    virtual double getU0(int dof) const override;

    /// Utility function to calculate the joint translation corresponding to the specified generalized coordinate.
    static ChVector3d calcRelLoc(double q);

  private:
    /// Calculate the across-joint transform X_FM.
    /// X_FM gives the change in position and orientation induced by the joint's generalized coordinates, generated by
    /// the current q values.
    virtual void setJointTransform(const ChVectorDynamic<>& y) override;

    /// Allow the body to perform any operations at the beginning of a simulation step.
    virtual void prepSim() override;

    double m_q0;
    double m_u0;
};

/// @} chrono_soa

}  // namespace soa
}  // namespace chrono

#endif
